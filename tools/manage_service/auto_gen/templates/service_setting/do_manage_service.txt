import sys
import os
import argparse
import subprocess
import shlex
import platform

def is_win_platform():
    return platform.system() == 'Windows'


service_infos = [
 {%- for elem in service_Infos  %}
    {
        "role": "{{ elem.role }}",
        "idx": {{ elem.idx }},
        "service_dir": "{{ elem.service_dir }}",
    },
 {%- endfor %}
]


def run_file_name():
    if is_win_platform():
        return "run.bat"
    else:
        return "run.sh"

def stop_file_name():
    if is_win_platform():
        return "stop.bat"
    else:
        return "stop.sh"

def ps_file_name():
    if is_win_platform():
        return "ps.bat"
    else:
        return "ps.sh"


Opera_Start = "start"
Opera_Stop = "stop"
Opera_Ps = "ps"

def parse_args(input_args):
    arg_parse = argparse.ArgumentParser()
    arg_parse.add_argument("opera", choices=[
        Opera_Start,
        Opera_Stop,
        Opera_Ps,
    ], help="operation to be execute")
    arg_parse.add_argument("--role", help="filter of role", default="")
    ret = arg_parse.parse_args(input_args)
    return ret


def filter_service(parse_ret):
    global service_infos
    ret = []
    for srv_info in service_infos:
        if parse_ret.role and parse_ret.role.strip().lower() != srv_info["role"]:
            continue
        ret.append(srv_info)
    return ret


def opera_stop_zone(parse_ret):
    fit_service_infos = filter_service(parse_ret)
    for srv_info in fit_service_infos:
        run_file = os.path.join(srv_info["service_dir"], stop_file_name()).replace("\\", "/")
        subprocess.run(shlex.split(run_file), shell=True)
        if is_win_platform():
            break


def opera_ps_zone(parse_ret):
    fit_service_infos = filter_service(parse_ret)
    for srv_info in fit_service_infos:
        run_file = os.path.join(srv_info["service_dir"], ps_file_name()).replace("\\", "/")
        subprocess.run(shlex.split(run_file), shell=True)
        if is_win_platform():
            break

def opera_start_zone(parse_ret):
    fit_service_infos = filter_service(parse_ret)
    for srv_info in fit_service_infos:
        run_file = os.path.join(srv_info["service_dir"], run_file_name()).replace("\\", "/")
        subprocess.run(shlex.split(run_file), shell=True)
    opera_ps_zone(parse_ret)


if __name__ == "__main__":
    parse_ret = parse_args(sys.argv[1:])
    opera_fns = {
        Opera_Start: opera_start_zone,
        Opera_Stop: opera_stop_zone,
        Opera_Ps: opera_ps_zone,
    }
    for (k, v) in vars(parse_ret).items():
        print("k,v {0}, {1}".format(k, v))
    selected_fn = opera_fns[parse_ret.opera]
    selected_fn(parse_ret)


